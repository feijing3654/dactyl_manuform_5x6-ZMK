#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    behaviors {
        F2_F5: F2_F5 {
            compatible = "zmk,behavior-tap-dance";
            label = "F2_F5";
            #binding-cells = <0>;
            bindings = <&kp F2>, <&kp F5>;
        };

        Bracket: Bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        DMP: DMP {
            compatible = "zmk,behavior-tap-dance";
            label = "DMP";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&kp C_MUTE>, <&kp C_PREVIOUS>;
        };

        UPN: UPN {
            compatible = "zmk,behavior-tap-dance";
            label = "UPN";
            #binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_PLAY_PAUSE>, <&kp C_NEXT>;
        };

        BSLH_GRV: BSLH_GRV {
            compatible = "zmk,behavior-tap-dance";
            label = "BSLH_GRV";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp GRAVE>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE       &kp N1  &kp N2            &kp N3             &kp N4            &kp N5                                      &kp N6         &kp N7     &kp N8        &kp N9     &kp N0     &kp MINUS
&kp CAPSLOCK     &kp Q   &kp W             &kp E              &kp R             &kp T                                       &kp Y          &kp U      &kp I         &kp O      &kp P      &kp EQUAL
&kp TAB          &kp A   &kp S             &kp D              &kp F             &kp G                                       &kp H          &kp J      &kp K         &kp L      &kp SEMI   &kp SQT
&kp LC(LS(TAB))  &kp Z   &kp X             &kp C              &kp V             &kp B                                       &kp N          &kp M      &kp COMMA     &kp DOT    &kp SLASH  &kp BACKSLASH
                         &kp LEFT_BRACKET  &kp RIGHT_BRACKET                                                                                          &kp LEFT_WIN  &kp GRAVE
                                                              &kp LEFT_CONTROL  &kp SPACE                                   &kp BACKSPACE  &kp ENTER
                                                                                &kp LEFT_SHIFT  &kp LC(LG(LEFT))  &mo 1     &mo 2
                                                                                &kp LEFT_ALT    &kp F1            &kp HOME  &kp DEL
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp F1          &kp F2          &kp F3           &kp F4  &kp F5                  &kp F6          &kp F7        &kp F8           &kp F9           &kp F10          &kp F11
&trans  &trans          &trans          &trans           &trans  &trans                  &studio_unlock  &kp SLASH     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp F12
&trans  &kp LEFT_ARROW  &kp UP_ARROW    &trans           &trans  &trans                  &kp KP_NUMLOCK  &kp ASTERISK  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS
&trans  &trans          &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans                  &kp GRAVE       &kp MINUS     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp ENTER
                        &trans          &trans                                                                         &kp LC(W)        &kp LC(LS(T))
                                                         &trans  &trans                  &trans          &trans
                                                                 &to 1   &to 2   &to 0   &to 2
                                                                 &trans  &trans  &trans  &trans
            >;
        };

        raise_layer {
            bindings = <
&bootloader  &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                      &trans             &trans  &trans             &trans           &trans  &trans
&trans       &bt BT_DISC 0  &bt BT_DISC 1   &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                     &trans             &trans  &trans             &trans           &trans  &trans
&trans       &bt BT_CLR     &bt BT_CLR_ALL  &bt BT_NXT     &bt BT_PRV     &trans                            &trans             &trans  &trans             &trans           &trans  &trans
&trans       &trans         &trans          &trans         &trans         &trans                            &trans             &trans  &kp C_PLAY_PAUSE   &kp K_MUTE       &trans  &trans
                            &trans          &trans                                                                                     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
                                                           &trans         &kp LC(LG(LEFT))                  &kp LC(LG(RIGHT))  &trans
                                                                          &to 1             &to 2   &to 0   &to 1
                                                                          &trans            &trans  &trans  &trans
            >;
        };
    };
};
